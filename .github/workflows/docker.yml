# This workflow builds and pushes docker images to dockerhub
#
# Summary
#
# job docker-branch-os-matrix:
# * creates tags latest-alpine, latest-debian and latest-ubuntu for main branch
# * creates tags stable-alpine, stable-debian and stable-ubuntu for releasebranch_7_8
# * if action would trigger other branches as well, they would create
#   tags <branch_name>-alpine, <branch_name>-debian and <branch_name>-ubuntu
#
# job docker-main-latest:
# * creates tag latest for main branch
#
# job docker-release-os-matrix:
# * creates tags <version>-alpine, <version>-debian and <version>-ubuntu for each release

name: Docker

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

    # env:
    #     # Additionally mentioned in docker-sha-release-latest
    #     # as use of variable fails there
    #     DOCKERHUB_REPOSITORY: mundialis/grass-py3-pdal

jobs:

  # Only run for push to configured branches, do not run for releases.
  # Take care of different os. For main branch, created tags are:
  # latest-alpine, latest-debian, latest-ubuntu
  # For releasebranch_7_8, created tags are:
  # stable-alpine, stable-debian, stable-ubuntu
  docker-branch-os-matrix:
    name: build and push for branch
    # if: startsWith(github.ref, 'refs/heads/') && github.repository_owner == 'OSGeo'
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: meta
        name: Create tag name
        run: |
          # if [ "$GITHUB_REF" == "refs/heads/main" ]
          # then
          #   TAG_PREFIX=latest
          # elif [ "$GITHUB_REF" == "refs/heads/releasebranch_7_8" ]
          # then
          #   TAG_PREFIX=stable
          # else
          #   # use branch name as TAG_PREFIX
          #   TAG_PREFIX=`echo $GITHUB_REF|cut -d '/' -f3`
          # fi
          tag="mydocker"
          echo "::set-output name=tags::$tag"
      - name: Log
        run: |
          echo ${{ steps.meta.outputs.tags }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        # - name: Login to DockerHub
        #   uses: docker/login-action@v1
        #   # with:
        #   #   username: ${{ secrets.DOCKERHUB_USERNAME }}
        #   #   password: ${{ secrets.DOCKERHUB_TOKEN  }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          push: true
          pull: true
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          file: docker/docker-cpu/Dockerfile
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
